import { isEmptyObject } from "../objects";
import { getRandomArrayValue } from "../array";

interface GetRandomColorOptions {
  colors?: string[];
  string?: string;
}

/**
 * Generates a random hexadecimal color code.
 * This function computes a random integer between 0 and 16777215 (inclusive), converts it to a hexadecimal string,
 * and formats it as a color code by ensuring it is six characters long and prefixed with '#'.
 *
 * @returns A string representing a random hex color code.
 *
 * @example
 * // Example usage:
 * const hexColor = getRandomHex();
 * console.log(hexColor); // Outputs a hex color, e.g., "#a1b2c3"
 */
export const getRandomHex = () => {
  const randomColor = Math.floor(Math.random() * 0xffffff);
  const hexColor = randomColor.toString(16).padStart(6, "0");
  return `#${hexColor}`;
};

/**
 * Generates a color from a provided array based on a hash derived from a given string.
 * This function calculates a hash from the input string and uses this hash to select a color from the provided color array.
 * If the string is empty, it returns the first color in the array.
 *
 * @param str - The string used to compute the hash for selecting a color.
 * @param colors - An array of color codes from which the function selects based on the computed hash of `str`.
 * @returns A color from the `colors` array corresponding to the hash of `str`.
 *
 * @example
 * // Example usage:
 * const colors = ['#FF5733', '#33FF57', '#3357FF'];
 * const colorFromName = generateHexColorFromStringAndColors('Hello', colors);
 * console.log(colorFromName); // Outputs one of the colors based on the hash of 'Hello'
 */
export function generateHexColorFromStringAndColors(
  str: string,
  colors: string[],
) {
  let index = 0;
  if (str.length === 0) return colors[0];
  for (let i = 0; i < str.length; i += 1) {
    index = str.charCodeAt(i) + ((index << 5) - index);
    index = index & index;
  }
  index = ((index % colors.length) + colors.length) % colors.length;
  return colors[index];
}

/**
 * Generates a hexadecimal color code based on the hash value computed from a given string.
 * This function creates a hash from the input string and converts it into a hexadecimal color.
 * If the string is empty, the function returns the hexadecimal representation of zero.
 *
 * @param str - The string used to compute the hash that determines the color.
 * @returns A string representing a hex color code. The color is generated by hashing the input string and mapping the hash value to a RGB color.
 *
 * @example
 * // Example usage:
 * const colorFromString = generateHexColorFromString('Example');
 * console.log(colorFromString); // Outputs a hex color, such as "#4a85b6", based on the hash of 'Example'
 */
export function generateHexColorFromString(str: string): string {
  let hash = 0;
  if (str.length === 0) return hash.toString();
  for (let i = 0; i < str.length; i += 1) {
    hash = str.charCodeAt(i) + ((hash << 5) - hash);
    hash = hash & hash;
  }
  let color = "#";
  for (let j = 0; j < 3; j += 1) {
    const value = (hash >> (j * 8)) & 255;
    color += `00${value.toString(16)}`.substr(-2);
  }
  return color;
}

/**
 * Generates a random color, with behavior that can be customized through an options object.
 * This function can generate a random hex color, select a color from an array, or compute a color based on a hash of a string,
 * depending on the provided options.
 *
 * @param opts - An optional parameter to specify the behavior of the color generation:
 *               - `string`: A string to generate a color based on its hash.
 *               - `colors`: An array of color strings from which to select or generate a color.
 *               If no options are provided, or if the options object is empty, a random hex color is returned.
 * @returns A string representing a hex color code, determined by the provided options or randomly generated.
 *
 * @example
 * // Example usage:
 * const colorFromOptions = getRandomColor({ string: 'hello', colors: ['#FF5733', '#33FF57', '#3357FF'] });
 * console.log(colorFromOptions); // Outputs a color based on the hash of 'hello' within the provided color array
 *
 * const randomColor = getRandomColor();
 * console.log(randomColor); // Outputs a random hex color
 */
export function getRandomColor(opts?: GetRandomColorOptions) {
  if (!opts || isEmptyObject(opts)) return getRandomHex();

  if (opts.string && opts.colors) {
    return generateHexColorFromStringAndColors(opts.string, opts.colors);
  } else if (opts.string && !opts.colors) {
    return generateHexColorFromString(opts.string);
  } else if (opts.colors && !opts.string) {
    return getRandomArrayValue(opts.colors);
  }

  return getRandomHex();
}
